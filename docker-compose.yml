#
# Copyright (c) 2018-2020 The NOMAD Authors.
#
# This file is part of NOMAD.
# See https://nomad-lab.eu for further info.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: "3"

services:
  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:3.11.5
    container_name: nomad_distro_api_rabbitmq
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', '--silent', '--quiet', 'ping']
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s

  # the search engine
  elastic:
    restart: unless-stopped
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    container_name: nomad_distro_api_elastic
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
    volumes:
      - elastic:/usr/share/elasticsearch/data
    healthcheck:
      test:
        - 'CMD'
        - 'curl'
        - '--fail'
        - '--silent'
        - 'http://elastic:9200/_cat/health'
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s

  # the user data db
  mongo:
    restart: unless-stopped
    image: mongo:5.0.6
    container_name: nomad_distro_api_mongo
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - mongo:/data/db
      - ./.volumes/mongo:/backup
    command: mongod --logpath=/dev/null # --quiet
    healthcheck:
      test:
        - 'CMD'
        - 'mongo'
        - 'mongo:27017/test'
        - '--quiet'
        - '--eval'
        - "'db.runCommand({ping:1}).ok'"
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s

  app:
    restart: unless-stopped
    build:
      context: .
    platform: linux/amd64
    container_name: nomad_distro
    command: ['python', '-m', 'nomad.cli', 'admin', 'run', 'appworker']
    environment:
      NOMAD_SERVICE: nomad_distro_api_app
      NOMAD_SERVICES_API_PORT: 80
      NOMAD_FS_EXTERNAL_WORKING_DIRECTORY: '$PWD'
      NOMAD_RABBITMQ_HOST: rabbitmq
      NOMAD_ELASTIC_HOST: elastic
      NOMAD_MONGO_HOST: mongo
    depends_on:
      rabbitmq:
        condition: service_healthy
      elastic:
        condition: service_healthy
      mongo:
        condition: service_healthy
    healthcheck:
      test:
        - 'CMD'
        - 'curl'
        - '--fail'
        - '--silent'
        - 'http://localhost:8000/-/health'
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s
        
  gui:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.gui
    platform: linux/amd64
    container_name: nomad_distro_gui
 
  # nomad proxy (a reverse proxy for nomad)
  proxy:
    restart: unless-stopped
    image: nginx:1.19-alpine
    container_name: nomad_distro_proxy
    volumes:
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_healthy
    ports:
      - 80:80
 
volumes:
  mongo:
    name: 'nomad_distro_api_mongo'
  elastic:
    name: 'nomad_distro_api_elastic'
  rabbitmq:
    name: 'nomad_distro_api_rabbitmq'
  keycloak:
    name: 'nomad_distro_api_keycloak'

networks:
  default:
    name: nomad_distro_api_network   
