Basic examples:
  theory:
    path: examples/data/uploads/theory.zip
    title: Electronic structure code input and output files
    description: |
      This upload demonstrate the basic use of NOMAD's *parsers*. For many *electronic
      structure codes* (VASP, etc.), NOMAD provides parsers. You simply upload
      the *input and output files* of your simulations and NOMAD parsers are extracting
      all necessary metadata to produce a **FAIR** dataset.
  eln:
    path: examples/data/uploads/eln.zip
    title: Electronic Lab Notebook
    description: |
      This example contains a custom NOMAD *schema* to create an **Electronic
      Lab Notebook (ELN)** and a few example *data* entries that use this schema.
      The schema demonstrates the basic concepts behind a NOMAD ELN and can be a good
      **starting point** to create you own schemas that model **FAIR data** acquired in your lab.
  tables:
    path: examples/data/uploads/tabular.zip
    title: Tabular Data
    description: |
      This upload demonstrates the used of tabular data. In this example we use an *xlsx*
      file in combination with a custom schema. The schema describes what the columns
      in the excel file mean and NOMAD can parse everything accordingly to
      produce a **FAIR** dataset.
Tutorials:
  cow_tutorial:
    path: examples/data/uploads/cow_tutorial.zip
    title: NOMAD as a Data Management Framework Tutorial
    description: |
      This upload provides a notebook as a tutorial that demonstrates how to use NOMAD
      for managing custom data and file types. Based on a simple *Countries of the World*
      dataset, it shows how to model the data in a schema, do parsing and normalization,
      process data, access existing data with NOMAD's API for analysis, and how to
      add visualization to your data.
FAIRmat examples:
  ellips:
    path: examples/data/uploads/ellips.zip
    title: Ellipsometry
    description: |
      This example presents the capabilities of the NOMAD platform to store and standardize ellipsometry data.
      It shows the generation of a NeXus file according to the [NXellipsometry](https://manual.nexusformat.org/classes/contributed_definitions/NXellipsometry.html#nxellipsometry)
      application definition and a successive analysis of a SiO2 on Si Psi/Delta measurement.
  mpes:
    path: examples/data/uploads/mpes.zip
    title: Mpes
    description: |
      This example presents the capabilities of the NOMAD platform to store and standardize multi photoemission spectroscopy (MPES) experimental data. It contains three major examples:

        - Taking a pre-binned file, here stored in a h5 file, and converting it into the standardized MPES NeXus format.
          There exists a [NeXus application definition for MPES](https://manual.nexusformat.org/classes/contributed_definitions/NXmpes.html#nxmpes) which details the internal structure of such a file.
        - Binning of raw data (see [here](https://www.nature.com/articles/s41597-020-00769-8) for additional resources) into a h5 file and consecutively generating a NeXus file from it.
        - An analysis example using data in the NeXus format and employing the [pyARPES](https://github.com/chstan/arpes) analysis tool to reproduce the main findings of [this paper](https://arxiv.org/pdf/2107.07158.pdf).
  xps:
    path: examples/data/uploads/xps.zip
    title: XPS
    description: |
      This example presents the capabilities of the NOMAD platform to store and standardize XPS data.
      It shows the generation of a NeXus file according to the
      [NXmpes](https://manual.nexusformat.org/classes/contributed_definitions/NXmpes.html#nxmpes)
      application definition and a successive analysis of an example data set.
  sts:
    path: examples/data/uploads/sts.zip
    title: STS
    description: |
      This example is for two types of experiments: Scanning Tunneling Microscopy (STM) and Scanning Tunneling Spectroscopy (STS) from Scanning Probe Microscopy.
      It can transform the data from files generated by a the nanonis software into the NeXus application definition NXsts.
      The example contains data files from the two specific nanonis software versions generic 5e and generic 4.5.
  stm:
    path: examples/data/uploads/stm.zip
    title: STM
    description: |
      This example is for two types of experiments: Scanning Tunneling Microscopy (STM) and Scanning Tunneling Spectroscopy (STS) from Scanning Probe Microscopy.
      It can transform the data from files generated by a the nanonis software into the NeXus application definition NXsts.
      The example contains data files from the two specific nanonis software versions generic 5e and generic 4.5.
  apm:
    path: examples/data/uploads/apm.zip
    title: Atom Probe Microscopy
    description: |
      This is an example for atom probe microscopy offering
      an atom-probe-specific custom schema for an ELN and aligned NeXus data schema
      (NXapm) supporting standardization, parsing capabilities for the most frequently
      used file formats (POS, ePOS, APT) for storing reconstruction and ranging
      definitions (RNG, RRNG), real world example data, and a docker container apmtools
      which contains configured open-source tools for analyzing atom probe dataset
      for exploring composition and microstructural features described using methods
      from the research fields of computational geometry and materials engineering.
  em_spctrscpy:
    path: examples/data/uploads/em_spctrscpy.zip
    title: Spectroscopy Experiments with Electron Microscopy
    description: |
      This is an example for scanning and/or transmission electron microscopy offering
      examples how NOMAD can be customized to support spectroscopy methods like
      energy-dispersive X-ray (EDXS/EDS) and electron energy loss spectroscopy (EELS).
      The example offers a domain-specific custom schema for an ELN and aligned NeXus
      data schema (NXem) supporting standardization, parsing capabilities for some
      examples of file formats supported via hyperspy and third-party tools.
      Examples implement how to parse data from DM3, Velox EMD and Bruker BCF files.
  em_om:
    path: examples/data/uploads/em_om.zip
    title: Orientation Microscopy with Electron Microscopy
    description: |
      This is an example for scanning and/or transmission electron microscopy offering
      a proof-of-concept how NOMAD can be customized to support orientation microscopy
      methods and thus one large group of diffraction-based methods in an electron
      microscope.
      Specifically, the example shows how electron backscatter diffraction as a
      technique can be conceptually represented in a research data management system.
      The example offers a domain-specific custom schema for storing EBSD data and
      related practical steps and mathematical conventions assumed including an aligned
      NeXus data schema (NXem_ebsd) as a draft proposal for convincing why more
      standardization in the research field of orientation microscopy is useful.
      Furthermore, the example comes with real world data from multiple sources
      different tools/analysis strategies used. The example includes a set of parsers
      using the pynxtools library which implements proof-of-concepts how EBSD data
      in different representation can be loaded (HDF5-based files from technology
      partners exemplified for H5OINA, analysis results from third-party community
      software like MTex, how to interface with an use the pyxem/orix/kikuchipy library,
      and an example of correlative studies where a set of serial-sectioning
      orientation maps is processed into a three-dimensionally reconstructed
      microstructure using the popular community tool DREAM.3D.
      Feedback from the EBSD community is welcome to substantially enhance
      the capabilities of the underlying tools, specifically pynxtools to
      offer a library that can be used in research data management systems
      such as but not exclusively NOMAD OASIS.
  em_nion:
    path: examples/data/uploads/em_nion.zip
    title: Reading electron microscopy data from compressed nionswift project files
    description: |
      This is an initial implementation and draft example using the pynxtools
      library capabilities and em_nion reader to show how data can be read
      directly from nionswift project files and then mapped using mapping
      tables on an instance of the NeXus NXem application definition.
  iv_temp:
    path: examples/data/uploads/iv_temp.zip
    title: Sensor Scan - IV Temperature Curve
    description: |
      This example shows users how to take data from a Python framework and map it out to a Nexus application definition for IV Temperature measurements, [NXiv_temp](https://fairmat-experimental.github.io/nexus-fairmat-proposal/1c3806dba40111f36a16d0205cc39a5b7d52ca2e/classes/contributed_definitions/NXiv_temp.html#nxiv-temp).
      We use the Nexus ELN features of Nomad to generate a Nexus file.
